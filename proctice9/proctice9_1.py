'''
第9讲 单元作业
使用9.5小节中的“商品房销售记录表”作为样本数据，编程实现一个房价预测系统。
要求：
1. 矩阵运算部分采用TensorFlow实现，数据加载、输入、输出等可以根据需要采用Python/NumPy来实现。
2. 提示用户输入商品房面积和房间数，并进行输入校验。合理的输入如下：
面积：20-500之间的实数
房间数：1-10之间的整数
如果输入正确，根据模型估计房价，并显示。
如果输入数据类型错误，或者输入数据范围不合理，根据错误类型提示，并等待用户重新输入。
提示：TensorFlow中矩阵求逆函数tf.linalg.inv(） 
'''

import numpy as np;
import tensorflow as tf;

x1=np.array([137.97, 104.50, 100.00, 124.32, 79.20, 99.00, 124.00, 114.00, 106.69, 138.05, 53.75, 46.91, 68.00, 63.02, 81.26, 86.21]);
x2= np.array([3, 2, 2, 3, 1, 2, 3, 2, 2, 3, 1, 1, 1, 1, 2, 2]);
y=np.array([145.00, 110.00, 93.00, 116.00, 65.32, 104.00, 118.00, 91.00, 62.00, 133.00, 51.00, 45.00, 78.50, 69.65, 75.69, 95.30]);


x0 = np.ones(len(x1));
X = np.stack((x0,x1,x2),axis=1);     #np.stack()表示数组堆叠
Y = np.array(y).reshape(-1,1);
#用公式求解模型参数（解析法）
Xt = np.transpose(X);       #计算矩阵转置（Xt）
XtX_1 = np.linalg.inv(np.matmul(Xt,X));     #计算转置矩阵(Xt)和原矩阵的乘积的-1次方（XtX_1）    （np.linalg.inv()表示矩求逆）
XtX_1_Xt = np.matmul(XtX_1,Xt);     #计算XtX_1与Xt的乘积
W = np.matmul(XtX_1_Xt,Y);      #计算XtX_1_Xt与Y的乘积（np.()matmul表示矩阵相乘）
W = W.reshape(-1);      #改变W数组的形状


print("请输入房屋面积和房间数，预测房屋销售价格：");
while 1:
    # print("多元线性回归方程：");
    # print("Y=",W[1],"*x1+",W[2],"*x2+",W[0]);       #输出多元线性回归方程
    #预测房价
    x1_test = float(input("商品房面积："));
    x2_test = int(input("房间数："));
    if x1_test>=20 and x1_test<=500 and x2_test>=1 and x2_test<=10:
        y_pred = W[1]*x1_test + W[2]*x2_test + W[0];        #用公式计算预测的房价
        print("预测价格：",round(y_pred,2),"万元");
        break;
    elif x1_test<20 or x1_test>500 or x2_test<1 or x2_test>10:
        print("输入数据范围不合理！请重新输入！（面积范围在20-500之间，房间数范围在1-10之间）");        #数据范围不合理的提示
    else:
        print("输入的数据类型错误！请重新输入！（面积：20-500之间的实数。房间数：1-10之间的整数）");        #数据类型错误的提示
    print("\n");
    print("请重新输入房屋面积和房间数，预测房屋销售价格：");
