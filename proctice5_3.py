'''
5.3已知:
x0是一个包含长度为10、元素值全部为1的一维数组
x1=[ 64.3, 99.6, 145.45, 63.75, 135.46, 92.85, 86.97, 144.76, 59.3, 116.03]
x2=[2, 3,4,2,3,4,2,4, 1,3]
y=[ 62.55, 82.42, 132.62, 73.31, 131.05, 86.57, 85.49, 127.44, 55.25, 104.84]
要求:
(1)将x0、x1、x2堆叠为-一个10x3的二维数组X，其中x0、xl、x2依次是第1列，第2列和第3列;将y变换为10x1的二维数组Y。
(2)计算: W=(X的T次方*X)的-1次方*X的T次方*Y，并回答: w的shape属性结果是什么?
(3)分别输出X，Y和W。
'''

import numpy as np;

x0 = np.ones((10,));        #长度为10、元素值全部为1的一维数组x0
x1 = np.array([ 64.3, 99.6, 145.45, 63.75, 135.46, 92.85, 86.97, 144.76, 59.3, 116.03]);
x2 = np.array([2, 3,4,2,3,4,2,4, 1,3]);
y = np.array([ 62.55, 82.42, 132.62, 73.31, 131.05, 86.57, 85.49, 127.44, 55.25, 104.84]);

#要求(1)
X = np.stack((x0,x1,x2),axis=1);        #将x0、x1、x2堆叠为-一个10x3的二维数组X，其中x0、xl、x2依次是第1列，第2列和第3列
Y = y.reshape(10,1);        #将y变换为10x1的二维数组Y

#要求(2)：以下操作都是数组的运算
trsX = np.transpose(X);     #X数组求矩阵转置
XXT = np.matmul(trsX,X);        #两个矩阵相乘
invXXT = np.linalg.inv(XXT);        #求逆矩阵
W = np.matmul(XXT,trsX);        #两个矩阵相乘
W = np.matmul(W,Y);         #两个矩阵相乘
print("W的shape属性结果：",W.shape);

#要求(3)
print("输出X：",X);
print("输出Y：",Y);
print("输出W：",W);